{"version":3,"sources":["components/Transaction.js","components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["Transaction","date","description","category","amount","TransactionsList","data","className","map","dataItem","id","Search","searchFunction","useState","search","setSearch","useEffect","type","placeholder","onChange","e","preventDefault","target","value","AddTransactionForm","fetchFunction","submitted","setSubmitted","onSubmit","reset","name","step","AccountContainer","accountData","setAccountData","accountUpdate","setAccountUpdate","searchTerms","a","fetch","then","res","json","filtered","filter","item","includes","console","log","catch","error","method","headers","Accept","body","JSON","stringify","newData","push","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ce5cf21.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Transaction({date, description, category, amount}) {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{description}</td>\n      <td>{category}</td>\n      <td>{amount}</td>\n    </tr>\n  );\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({ data }) {\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {/* {\n          addedData\n            ?\n            <Transaction key={addedData.id} date={addedData.date} description={addedData.description} category={addedData.category} amount={addedData.amount} />\n            :\n            null\n        } */}\n        {\n          data.map(dataItem => {\n            return <Transaction key={dataItem.id} date={dataItem.date} description={dataItem.description} category={dataItem.category} amount={dataItem.amount} />\n          })\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n","import React , { useEffect , useState} from \"react\";\n\nfunction Search({searchFunction}) {\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    searchFunction(search)\n  }, [search])\n\n  // update state on input change \n  function handleSearch(e){\n    e.preventDefault();\n    setSearch(e.target.value);\n  }\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        onChange={handleSearch}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\n\nfunction AddTransactionForm({fetchFunction}) {\n  const [submitted, setSubmitted] = useState(null);\n  // const [addedData, setAddedData] = useState(null);\n\n  useEffect(() => {\n    fetchFunction(submitted)\n\n  }, [submitted])\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const date = e.target.date.value;\n    const description = e.target.description.value;\n    const category = e.target.category.value;\n    const amount = e.target.amount.value;\n\n    const formData = {\n      date: date,\n      description: description,\n      category: category,\n      amount: amount\n    }\n    // set submitted data\n    setSubmitted(formData);\n    e.target.reset();\n\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n","import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [accountData, setAccountData] = useState([]);\n  // check state of current data\n  const [accountUpdate, setAccountUpdate] = useState([...accountData])\n  const [searchData, setSearchData] = useState([...accountData]);\n\n\n useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then(res => res.json())\n      .then(data => {\n        setAccountData(data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [accountUpdate])\n\n  async function searchFunction(searchTerms){\n    fetch(\"http://localhost:8001/transactions\")\n      .then(res => res.json())\n      .then(data => {\n        let newData = [];\n        const filtered = data.filter(item => {\n          return item.description.includes(searchTerms)\n          \n        })\n        setAccountData(filtered)\n        console.log(filtered)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n  }\n\n  // handle addition of data \n  async function fetchAddData(submitted){\n    fetch(\"http://localhost:8001/transactions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        // data from the form\n        body: JSON.stringify(submitted)\n      })\n      .then(res => res.json())\n      .then(data => {\n        let newData = [];\n        newData.push(data)\n        // update the dom with posted data\n        setAccountUpdate(...newData)\n        console.log(newData)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n\n\n  return (\n    <div>\n      <Search searchFunction={searchFunction} />\n      <AddTransactionForm fetchFunction={fetchAddData}/>\n      <TransactionsList data={accountData} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}